version: "3.9"
services:
  api1: &api
    build:
      context: .
      target: release
    hostname: api1
    depends_on:
      - postgres
    environment:
      DATABASE_URL: ecto://postgres:postgres@postgres/rinha_backend_elixir_prod
      SECRET_KEY_BASE: 1Syx0lXQyk/14OAbwdLwFr7a7loSGc8z/ImnU+93HRdSSO2r31Y8gccUURgkPEd0
    expose:
      - "4000"
    deploy:
      resources:
        limits:
          cpus: '0.175'
          memory: '0.5GB'


  api2:
    <<: *api
    hostname: api2

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - ./priv/repo/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "rinha_backend_elixir_prod", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '1.5GB'

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.5GB'

networks:
  default:
    name: rinha-elixir
    driver: bridge

volumes:
  pg-data:
